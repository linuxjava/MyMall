server:
  port: 8080

spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:mysql://43.154.93.74:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: Xiao123456
    type: com.alibaba.druid.pool.DruidDataSource
  redis:
    host: 127.0.0.1 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    timeout: 3000ms # 连接超时时间
    lettuce:
      pool:
        max-active: 8 # 连接池最大连接数
        max-idle: 8 # 连接池最大空闲连接数
        min-idle: 0 # 连接池最小空闲连接数
        max-wait: -1ms # 连接池最大阻塞等待时间，负值表示没有限制
  #    cluster:
  #      nodes:
  #        - 192.168.6.139:6391
  #        - 192.168.6.139:6392
  #        - 192.168.6.139:6393
  #        - 192.168.6.139:6394
  #        - 192.168.6.139:6395
  #        - 192.168.6.139:6396
  servlet:
    multipart:
      enabled: true #开启文件上传
      max-file-size: 10MB #限制文件上传大小为10M
#好像无需下面配置也能正常运行
#  rabbitmq:
#    host: localhost
#    port: 5672
#    virtual-host: /mall
#    username: guest
#    password: guest
##    publisher-confirms: true #消息发送到交换器确认
##    publisher-returns: true #消息发送到队列确认

knife4j:
  enable: true
  openapi:
    title: Knife4j官方文档
    description: "`我是测试`,**你知道吗**
    # aaa"
    email: xiaoymin@foxmail.com
    concat: 八一菜刀
    url: https://docs.xiaominfo.com
    version: v4.0
    license: Apache 2.0
    license-url: https://stackoverflow.com/
    terms-of-service-url: https://stackoverflow.com/
    group:
      all:
        group-name: 所有
        api-rule: package
        api-rule-resources:
          - com.xiao.mall.controller # 定义所有controller扫描路径
      pms:
        group-name: 商品管理
        api-rule: package
        api-rule-resources:
          - com.xiao.mall.controller.pms # 定义controller扫描路径
      ums:
        group-name: 用户管理
        api-rule: package
        api-rule-resources:
          - com.xiao.mall.controller.ums # 定义controller扫描路径
mybatis-flex:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #配置日志输出
  mapper-locations:  #配置xml路径
    - classpath:mapper/*.xml
    - classpath*:com/**/mapper/*.xml
    - classpath*:com/**/mappers/*.xml
# MinIO对象存储相关配置
minio:
  endpoint: http://127.0.0.1:9000 #MinIO服务所在地址
  bucketName: mall #存储桶名称
  accessKey: PzYZagqZr2qRCiVMnbGo #访问的key
  secretKey: r746MBItBb270fA5XGprBWxmr4DXac8BCt5YhsKl #访问的秘钥

